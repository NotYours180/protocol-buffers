// Proto generated by './zwave_proto_gen'
// Do not edit!

syntax = "proto3";
package matrix_malos;

message ZWaveCommand {


  message COMMAND_CLASS_ALARM_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    ALARM_GET = 1;
      // param 0: Alarm Type
    ALARM_REPORT = 2;
      // param 0: Alarm Type
      // param 1: Alarm Level
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ANTITHEFT_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    ANTITHEFT_SET = 1;
      // param 0: Properties1
      // param 1: Magic Code
      // param 2: Manufacturer ID
      // param 3: Anti-theft Hint Number Bytes
      // param 4: Anti-theft Hint Byte
    ANTITHEFT_GET = 2;
    ANTITHEFT_REPORT = 3;
      // param 0: Anti-theft Protection Status
      // param 1: Manufacturer ID
      // param 2: Anti-theft Hint Number Bytes
      // param 3: Anti-theft Hint Byte
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_APPLICATION_CAPABILITY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    COMMAND_COMMAND_CLASS_NOT_SUPPORTED = 1;
      // param 0: Properties1
      // param 1: Offending Command Class
      // param 2: Offending Command
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_APPLICATION_STATUS_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    APPLICATION_BUSY = 1;
      // param 0: Status
      // param 1: Wait Time
    APPLICATION_REJECTED_REQUEST = 2;
      // param 0: Status
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ASSOCIATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    ASSOCIATION_GET = 1;
      // param 0: Grouping Identifier
    ASSOCIATION_GROUPINGS_GET = 2;
    ASSOCIATION_GROUPINGS_REPORT = 3;
      // param 0: Supported Groupings
    ASSOCIATION_REMOVE = 4;
      // param 0: Grouping Identifier
      // param 1: Node ID
    ASSOCIATION_REPORT = 5;
      // param 0: Grouping Identifier
      // param 1: Max Nodes Supported
      // param 2: Reports to Follow
      // param 3: NodeID
    ASSOCIATION_SET = 6;
      // param 0: Grouping Identifier
      // param 1: Node ID
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ASSOCIATION_COMMAND_CONFIGURATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    COMMAND_CONFIGURATION_GET = 1;
      // param 0: Grouping identifier
      // param 1: Node ID
    COMMAND_CONFIGURATION_REPORT = 2;
      // param 0: Grouping identifier
      // param 1: Node ID
      // param 2: Properties1
      // param 3: Command length
      // param 4: Command Class identifier
      // param 5: Command identifier
      // param 6: Command byte
    COMMAND_CONFIGURATION_SET = 3;
      // param 0: Grouping identifier
      // param 1: Node ID
      // param 2: Command length
      // param 3: Command Class identifier
      // param 4: Command identifier
      // param 5: Command byte
    COMMAND_RECORDS_SUPPORTED_GET = 4;
    COMMAND_RECORDS_SUPPORTED_REPORT = 5;
      // param 0: Properties1
      // param 1: Free Command records
      // param 2: Max Command records
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ASSOCIATION_GRP_INFO_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    ASSOCIATION_GROUP_NAME_GET = 1;
      // param 0: Grouping Identifier
    ASSOCIATION_GROUP_NAME_REPORT = 2;
      // param 0: Grouping Identifier
      // param 1: Length of Name
      // param 2: Name
    ASSOCIATION_GROUP_INFO_GET = 3;
      // param 0: Properties1
      // param 1: Grouping Identifier
    ASSOCIATION_GROUP_INFO_REPORT = 4;
      // param 0: Properties1
      // param 1: vg1
    ASSOCIATION_GROUP_COMMAND_LIST_GET = 5;
      // param 0: Properties1
      // param 1: Grouping Identifier
    ASSOCIATION_GROUP_COMMAND_LIST_REPORT = 6;
      // param 0: Grouping Identifier
      // param 1: List Length
      // param 2: Command
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_AV_CONTENT_DIRECTORY_MD_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    AV_CONTENT_BROWSE_MD_BY_LETTER_GET = 1;
    AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT = 2;
    AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET = 3;
    AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT = 4;
    AV_CONTENT_BROWSE_MD_GET = 5;
    AV_CONTENT_BROWSE_MD_REPORT = 6;
    AV_MATCH_ITEM_TO_RENDERER_MD_GET = 7;
    AV_MATCH_ITEM_TO_RENDERER_MD_REPORT = 8;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_AV_CONTENT_SEARCH_MD_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    AV_CONTENT_SEARCH_MD_GET = 1;
    AV_CONTENT_SEARCH_MD_REPORT = 2;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_AV_RENDERER_STATUS_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    AV_RENDERER_STATUS_GET = 1;
    AV_RENDERER_STATUS_REPORT = 2;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_AV_TAGGING_MD_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    AV_TAGGING_MD_GET = 1;
    AV_TAGGING_MD_REPORT = 2;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_BARRIER_OPERATOR_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    BARRIER_OPERATOR_SET = 1;
      // param 0: Target Value
    BARRIER_OPERATOR_GET = 2;
    BARRIER_OPERATOR_REPORT = 3;
      // param 0: State
    BARRIER_OPERATOR_SIGNAL_SUPPORTED_GET = 4;
    BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT = 5;
      // param 0: Bit Mask
    BARRIER_OPERATOR_SIGNAL_SET = 6;
      // param 0: Subsystem Type
      // param 1: Subsystem State
    BARRIER_OPERATOR_SIGNAL_GET = 7;
      // param 0: Subsystem Type
    BARRIER_OPERATOR_SIGNAL_REPORT = 8;
      // param 0: Subsystem Type
      // param 1: Subsystem State
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_BASIC_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    BASIC_GET = 1;
    BASIC_REPORT = 2;
      // param 0: Value
    BASIC_SET = 3;
      // param 0: Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_BASIC_TARIFF_INFO_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    BASIC_TARIFF_INFO_GET = 1;
    BASIC_TARIFF_INFO_REPORT = 2;
      // param 0: Properties1
      // param 1: Properties2
      // param 2: E1 Rate Consumption Register
      // param 3: E1 Time for Next Rate Hours
      // param 4: E1 Time for Next Rate Minutes
      // param 5: E1 Time for Next Rate Seconds
      // param 6: Properties3
      // param 7: E2 Rate Consumption Register
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_BASIC_WINDOW_COVERING_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    BASIC_WINDOW_COVERING_START_LEVEL_CHANGE = 1;
      // param 0: Level
    BASIC_WINDOW_COVERING_STOP_LEVEL_CHANGE = 2;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_BATTERY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    BATTERY_GET = 1;
    BATTERY_REPORT = 2;
      // param 0: Battery Level
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_CENTRAL_SCENE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    CENTRAL_SCENE_SUPPORTED_GET = 1;
    CENTRAL_SCENE_SUPPORTED_REPORT = 2;
      // param 0: Supported Scenes
    CENTRAL_SCENE_NOTIFICATION = 3;
      // param 0: Sequence Number
      // param 1: Properties1
      // param 2: Scene Number
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_CHIMNEY_FAN_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    CHIMNEY_FAN_ALARM_LOG_GET = 1;
    CHIMNEY_FAN_ALARM_LOG_REPORT = 2;
      // param 0: Alarm Event 1
      // param 1: Alarm Event 2
      // param 2: Alarm Event 3
      // param 3: Alarm Event 4
      // param 4: Alarm Event 5
    CHIMNEY_FAN_ALARM_LOG_SET = 3;
      // param 0: Message
    CHIMNEY_FAN_ALARM_STATUS_GET = 4;
    CHIMNEY_FAN_ALARM_STATUS_REPORT = 5;
      // param 0: Alarm Status
    CHIMNEY_FAN_ALARM_STATUS_SET = 6;
      // param 0: Message
    CHIMNEY_FAN_ALARM_TEMP_GET = 7;
    CHIMNEY_FAN_ALARM_TEMP_REPORT = 8;
      // param 0: Properties1
      // param 1: Value
    CHIMNEY_FAN_ALARM_TEMP_SET = 9;
      // param 0: Properties1
      // param 1: Value
    CHIMNEY_FAN_BOOST_TIME_GET = 10;
    CHIMNEY_FAN_BOOST_TIME_REPORT = 11;
      // param 0: Time
    CHIMNEY_FAN_BOOST_TIME_SET = 12;
      // param 0: Time
    CHIMNEY_FAN_DEFAULT_SET = 13;
    CHIMNEY_FAN_MIN_SPEED_GET = 14;
    CHIMNEY_FAN_MIN_SPEED_REPORT = 15;
      // param 0: Min Speed
    CHIMNEY_FAN_MIN_SPEED_SET = 16;
      // param 0: Min Speed
    CHIMNEY_FAN_MODE_GET = 17;
    CHIMNEY_FAN_MODE_REPORT = 18;
      // param 0: Mode
    CHIMNEY_FAN_MODE_SET = 19;
      // param 0: Mode
    CHIMNEY_FAN_SETUP_GET = 20;
    CHIMNEY_FAN_SETUP_REPORT = 21;
      // param 0: Mode
      // param 1: Boost Time
      // param 2: Stop Time
      // param 3: Min. Speed
      // param 4: Properties1
      // param 5: Start Temperature
      // param 6: Properties2
      // param 7: Stop Temperature
      // param 8: Properties3
      // param 9: Alarm Temperature Value
    CHIMNEY_FAN_SETUP_SET = 22;
      // param 0: Mode
      // param 1: Boost Time
      // param 2: Stop Time
      // param 3: Min. Speed
      // param 4: Properties1
      // param 5: Start Temperature
      // param 6: Properties2
      // param 7: Stop Temperature
      // param 8: Properties3
      // param 9: Alarm Temperature Value
    CHIMNEY_FAN_SPEED_GET = 23;
    CHIMNEY_FAN_SPEED_REPORT = 24;
      // param 0: Speed
    CHIMNEY_FAN_SPEED_SET = 25;
      // param 0: Speed
    CHIMNEY_FAN_START_TEMP_GET = 26;
    CHIMNEY_FAN_START_TEMP_REPORT = 27;
      // param 0: Properties1
      // param 1: Value
    CHIMNEY_FAN_START_TEMP_SET = 28;
      // param 0: Properties1
      // param 1: Value
    CHIMNEY_FAN_STATE_GET = 29;
    CHIMNEY_FAN_STATE_REPORT = 30;
      // param 0: State
    CHIMNEY_FAN_STATE_SET = 31;
      // param 0: State
    CHIMNEY_FAN_STATUS_GET = 32;
    CHIMNEY_FAN_STATUS_REPORT = 33;
      // param 0: State
      // param 1: Speed
      // param 2: Alarm Status
      // param 3: Properties1
      // param 4: Value
    CHIMNEY_FAN_STOP_TEMP_GET = 34;
    CHIMNEY_FAN_STOP_TEMP_REPORT = 35;
      // param 0: Properties1
      // param 1: Value
    CHIMNEY_FAN_STOP_TEMP_SET = 36;
      // param 0: Properties1
      // param 1: Value
    CHIMNEY_FAN_STOP_TIME_GET = 37;
    CHIMNEY_FAN_STOP_TIME_REPORT = 38;
      // param 0: Time
    CHIMNEY_FAN_STOP_TIME_SET = 39;
      // param 0: Time
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_CLIMATE_CONTROL_SCHEDULE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SCHEDULE_CHANGED_GET = 1;
    SCHEDULE_CHANGED_REPORT = 2;
      // param 0: ChangeCounter
    SCHEDULE_GET = 3;
      // param 0: Properties1
    SCHEDULE_OVERRIDE_GET = 4;
    SCHEDULE_OVERRIDE_REPORT = 5;
      // param 0: Properties1
      // param 1: Override State
    SCHEDULE_OVERRIDE_SET = 6;
      // param 0: Properties1
      // param 1: Override State
    SCHEDULE_REPORT = 7;
      // param 0: Properties1
      // param 1: Switchpoint 0
      // param 2: Switchpoint 1
      // param 3: Switchpoint 2
      // param 4: Switchpoint 3
      // param 5: Switchpoint 4
      // param 6: Switchpoint 5
      // param 7: Switchpoint 6
      // param 8: Switchpoint 7
      // param 9: Switchpoint 8
    SCHEDULE_SET = 8;
      // param 0: Properties1
      // param 1: Switchpoint 0
      // param 2: Switchpoint 1
      // param 3: Switchpoint 2
      // param 4: Switchpoint 3
      // param 5: Switchpoint 4
      // param 6: Switchpoint 5
      // param 7: Switchpoint 6
      // param 8: Switchpoint 7
      // param 9: Switchpoint 8
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_CLOCK_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    CLOCK_GET = 1;
    CLOCK_REPORT = 2;
      // param 0: Level
      // param 1: Minute
    CLOCK_SET = 3;
      // param 0: Level
      // param 1: Minute
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_CONFIGURATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    CONFIGURATION_GET = 1;
      // param 0: Parameter Number
    CONFIGURATION_REPORT = 2;
      // param 0: Parameter Number
      // param 1: Level
      // param 2: Configuration Value
    CONFIGURATION_SET = 3;
      // param 0: Parameter Number
      // param 1: Level
      // param 2: Configuration Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_CONTROLLER_REPLICATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    CTRL_REPLICATION_TRANSFER_GROUP = 1;
      // param 0: Sequence Number
      // param 1: Group ID
      // param 2: Node ID
    CTRL_REPLICATION_TRANSFER_GROUP_NAME = 2;
      // param 0: Sequence Number
      // param 1: Group ID
      // param 2: Group Name
    CTRL_REPLICATION_TRANSFER_SCENE = 3;
      // param 0: Sequence Number
      // param 1: Scene ID
      // param 2: Node ID
      // param 3: Level
    CTRL_REPLICATION_TRANSFER_SCENE_NAME = 4;
      // param 0: Sequence Number
      // param 1: Scene ID
      // param 2: Scene Name
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_CRC_16_ENCAP_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    CRC_16_ENCAP = 1;
      // param 0: Command Class
      // param 1: Command
      // param 2: Data
      // param 3: Checksum
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_DCP_CONFIG_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    DCP_LIST_REMOVE = 1;
      // param 0: Year
      // param 1: Month
      // param 2: Day
      // param 3: Hour Local Time
      // param 4: Minute Local Time
      // param 5: Second Local Time
    DCP_LIST_SET = 2;
      // param 0: Year
      // param 1: Month
      // param 2: Day
      // param 3: Hour Local Time
      // param 4: Minute Local Time
      // param 5: Second Local Time
      // param 6: DCP Rate ID
      // param 7: Properties1
      // param 8: vg1
      // param 9: Start Year
      // param 10: Start Month
      // param 11: Start Day
      // param 12: Start Hour Local Time
      // param 13: Start Minute Local Time
      // param 14: Start Second Local Time
      // param 15: Duration Hour Time
      // param 16: Duration Minute Time
      // param 17: Duration Second Time
      // param 18: Event Priority
      // param 19: Load shedding
      // param 20: Start Association Group
      // param 21: Stop Association Group
      // param 22: Randomization interval
    DCP_LIST_SUPPORTED_GET = 3;
    DCP_LIST_SUPPORTED_REPORT = 4;
      // param 0: DCP List Size
      // param 1: Free DCP List entries
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_DCP_MONITOR_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    DCP_EVENT_STATUS_GET = 1;
      // param 0: Year
      // param 1: Month
      // param 2: Day
      // param 3: Hour Local Time
      // param 4: Minute Local Time
      // param 5: Second Local Time
    DCP_EVENT_STATUS_REPORT = 2;
      // param 0: Year
      // param 1: Month
      // param 2: Day
      // param 3: Hour Local Time
      // param 4: Minute Local Time
      // param 5: Second Local Time
      // param 6: Event status
    DCP_LIST_GET = 3;
    DCP_LIST_REPORT = 4;
      // param 0: Reports to Follow
      // param 1: Year
      // param 2: Month
      // param 3: Day
      // param 4: Hour Local Time
      // param 5: Minute Local Time
      // param 6: Second Local Time
      // param 7: DCP ID
      // param 8: Properties1
      // param 9: vg1
      // param 10: Start Year
      // param 11: Start Month
      // param 12: Start Day
      // param 13: Start Hour Local Time
      // param 14: Start Minute Local Time
      // param 15: Start Second Local Time
      // param 16: Duration Hour Time
      // param 17: Duration Minute Time
      // param 18: Duration Second Time
      // param 19: Event Priority
      // param 20: Load shedding
      // param 21: Start Association Group
      // param 22: Stop Association Group
      // param 23: Randomization interval
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_DEVICE_RESET_LOCALLY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    DEVICE_RESET_LOCALLY_NOTIFICATION = 1;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_DMX_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    DMX_ADDRESS_SET = 1;
      // param 0: Properties1
      // param 1: Channel ID
    DMX_ADDRESS_GET = 2;
    DMX_ADDRESS_REPORT = 3;
      // param 0: Properties1
      // param 1: Channel ID
    DMX_CAPABILITY_GET = 4;
      // param 0: Channel ID
    DMX_CAPABILITY_REPORT = 5;
      // param 0: Channel ID
      // param 1: Property ID
      // param 2: Device Channels
      // param 3: Max Channels
    DMX_DATA = 6;
      // param 0: Source
      // param 1: Properties1
      // param 2: DMX channel
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_DOOR_LOCK_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    DOOR_LOCK_CONFIGURATION_GET = 1;
    DOOR_LOCK_CONFIGURATION_REPORT = 2;
      // param 0: Operation Type
      // param 1: Properties1
      // param 2: Lock Timeout Minutes
      // param 3: Lock Timeout Seconds
    DOOR_LOCK_CONFIGURATION_SET = 3;
      // param 0: Operation Type
      // param 1: Properties1
      // param 2: Lock Timeout Minutes
      // param 3: Lock Timeout Seconds
    DOOR_LOCK_OPERATION_GET = 4;
    DOOR_LOCK_OPERATION_REPORT = 5;
      // param 0: Door Lock Mode
      // param 1: Properties1
      // param 2: Door Condition
      // param 3: Lock Timeout Minutes
      // param 4: Lock Timeout Seconds
    DOOR_LOCK_OPERATION_SET = 6;
      // param 0: Door Lock Mode
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_DOOR_LOCK_LOGGING_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_GET = 1;
    DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_REPORT = 2;
      // param 0: Max records stored
    RECORD_GET = 3;
      // param 0: Record number
    RECORD_REPORT = 4;
      // param 0: Record number
      // param 1: Year
      // param 2: Month
      // param 3: Day
      // param 4: Properties1
      // param 5: Minute Local Time
      // param 6: Second Local Time
      // param 7: Event Type
      // param 8: User Identifier
      // param 9: User Code Length
      // param 10: USER_CODE
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ENERGY_PRODUCTION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    ENERGY_PRODUCTION_GET = 1;
      // param 0: Parameter Number
    ENERGY_PRODUCTION_REPORT = 2;
      // param 0: Parameter Number
      // param 1: Level
      // param 2: Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ENTRY_CONTROL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    ENTRY_CONTROL_NOTIFICATION = 1;
      // param 0: Sequence Number
      // param 1: Properties1
      // param 2: Event Type
      // param 3: Event Data Length
      // param 4: Event Data
    ENTRY_CONTROL_KEY_SUPPORTED_GET = 2;
    ENTRY_CONTROL_KEY_SUPPORTED_REPORT = 3;
      // param 0: Key Supported Bit Mask Length
      // param 1: Key Supported Bit Mask
    ENTRY_CONTROL_EVENT_SUPPORTED_GET = 4;
    ENTRY_CONTROL_EVENT_SUPPORTED_REPORT = 5;
      // param 0: Properties1
      // param 1: Data Type Supported Bit Mask
      // param 2: Properties2
      // param 3: Event Type Supported Bit Mask
      // param 4: Key Cached Size supported Minimum
      // param 5: Key Cached Size supported Maximum
      // param 6: Key Cached Timeout supported Minimum
      // param 7: Key Cached Timeout supported Maximum
    ENTRY_CONTROL_CONFIGURATION_SET = 6;
      // param 0: Key Cache Size
      // param 1: Key Cache Timeout
    ENTRY_CONTROL_CONFIGURATION_GET = 7;
    ENTRY_CONTROL_CONFIGURATION_REPORT = 8;
      // param 0: Key Cache Size
      // param 1: Key Cache Timeout
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_FIRMWARE_UPDATE_MD_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    FIRMWARE_MD_GET = 1;
    FIRMWARE_MD_REPORT = 2;
      // param 0: Manufacturer ID
      // param 1: Firmware ID
      // param 2: Checksum
    FIRMWARE_UPDATE_MD_GET = 3;
      // param 0: Number of Reports
      // param 1: Properties1
      // param 2: Report number 2
    FIRMWARE_UPDATE_MD_REPORT = 4;
      // param 0: Properties1
      // param 1: Report number 2
      // param 2: Data
    FIRMWARE_UPDATE_MD_REQUEST_GET = 5;
      // param 0: Manufacturer ID
      // param 1: Firmware ID
      // param 2: Checksum
    FIRMWARE_UPDATE_MD_REQUEST_REPORT = 6;
      // param 0: Status
    FIRMWARE_UPDATE_MD_STATUS_REPORT = 7;
      // param 0: Status
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_GEOGRAPHIC_LOCATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    GEOGRAPHIC_LOCATION_GET = 1;
    GEOGRAPHIC_LOCATION_REPORT = 2;
      // param 0: Longitude Degrees
      // param 1: Level
      // param 2: Latitude Degrees
      // param 3: Level2
    GEOGRAPHIC_LOCATION_SET = 3;
      // param 0: Longitude Degrees
      // param 1: Level
      // param 2: Latitude Degrees
      // param 3: Level2
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_GROUPING_NAME_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    GROUPING_NAME_GET = 1;
      // param 0: Grouping identifier
    GROUPING_NAME_REPORT = 2;
      // param 0: Grouping identifier
      // param 1: Properties1
      // param 2: Grouping Name
    GROUPING_NAME_SET = 3;
      // param 0: Grouping identifier
      // param 1: Properties1
      // param 2: Grouping Name
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_HAIL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    HAIL = 1;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_HRV_CONTROL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    HRV_CONTROL_BYPASS_GET = 1;
    HRV_CONTROL_BYPASS_REPORT = 2;
      // param 0: Bypass
    HRV_CONTROL_BYPASS_SET = 3;
      // param 0: Bypass
    HRV_CONTROL_MODE_GET = 4;
    HRV_CONTROL_MODE_REPORT = 5;
      // param 0: Properties1
    HRV_CONTROL_MODE_SET = 6;
      // param 0: Properties1
    HRV_CONTROL_MODE_SUPPORTED_GET = 7;
    HRV_CONTROL_MODE_SUPPORTED_REPORT = 8;
      // param 0: Properties1
      // param 1: Bit Mask
    HRV_CONTROL_VENTILATION_RATE_GET = 9;
    HRV_CONTROL_VENTILATION_RATE_REPORT = 10;
      // param 0: Ventilation Rate
    HRV_CONTROL_VENTILATION_RATE_SET = 11;
      // param 0: Ventilation Rate
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_HRV_STATUS_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    HRV_STATUS_GET = 1;
      // param 0: Status Parameter
    HRV_STATUS_REPORT = 2;
      // param 0: Status Parameter
      // param 1: Properties1
      // param 2: Value
    HRV_STATUS_SUPPORTED_GET = 3;
    HRV_STATUS_SUPPORTED_REPORT = 4;
      // param 0: Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_HUMIDITY_CONTROL_MODE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    HUMIDITY_CONTROL_MODE_SET = 1;
      // param 0: Properties1
    HUMIDITY_CONTROL_MODE_GET = 2;
    HUMIDITY_CONTROL_MODE_REPORT = 3;
      // param 0: Properties1
    HUMIDITY_CONTROL_MODE_SUPPORTED_GET = 4;
    HUMIDITY_CONTROL_MODE_SUPPORTED_REPORT = 5;
      // param 0: Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_HUMIDITY_CONTROL_OPERATING_STATE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    HUMIDITY_CONTROL_OPERATING_STATE_GET = 1;
    HUMIDITY_CONTROL_OPERATING_STATE_REPORT = 2;
      // param 0: Properties1
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_HUMIDITY_CONTROL_SETPOINT_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    HUMIDITY_CONTROL_SETPOINT_SET = 1;
      // param 0: Properties1
      // param 1: Properties2
      // param 2: Value
    HUMIDITY_CONTROL_SETPOINT_GET = 2;
      // param 0: Properties1
    HUMIDITY_CONTROL_SETPOINT_REPORT = 3;
      // param 0: Properties1
      // param 1: Properties2
      // param 2: Value
    HUMIDITY_CONTROL_SETPOINT_SUPPORTED_GET = 4;
    HUMIDITY_CONTROL_SETPOINT_SUPPORTED_REPORT = 5;
      // param 0: Bit Mask
    HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET = 6;
      // param 0: Properties1
    HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT = 7;
      // param 0: Properties1
    HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET = 8;
      // param 0: Properties1
    HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT = 9;
      // param 0: Properties1
      // param 1: Properties2
      // param 2: Minimum Value
      // param 3: Properties3
      // param 4: Maximum Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_INCLUSION_CONTROLLER_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    INITIATE = 1;
      // param 0: Node ID
      // param 1: Step ID
    COMPLETE = 2;
      // param 0: Step ID
      // param 1: Status
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_INDICATOR_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    INDICATOR_GET = 1;
    INDICATOR_REPORT = 2;
      // param 0: Value
    INDICATOR_SET = 3;
      // param 0: Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_IP_ASSOCIATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    IP_ASSOCIATION_SET = 1;
      // param 0: Grouping Identifier
      // param 1: IPv6 Address
      // param 2: End Point
    IP_ASSOCIATION_GET = 2;
      // param 0: Grouping Identifier
      // param 1: Index
    IP_ASSOCIATION_REPORT = 3;
      // param 0: Grouping Identifier
      // param 1: Index
      // param 2: Actual Nodes
      // param 3: IPv6 Address
      // param 4: End Point
    IP_ASSOCIATION_REMOVE = 4;
      // param 0: Grouping Identifier
      // param 1: IPv6 Address
      // param 2: End Point
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_IP_CONFIGURATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    IP_CONFIGURATION_GET = 1;
    IP_CONFIGURATION_RELEASE = 2;
    IP_CONFIGURATION_RENEW = 3;
    IP_CONFIGURATION_REPORT = 4;
      // param 0: Properties1
      // param 1: IP Address
      // param 2: Subnet Mask
      // param 3: Gateway
      // param 4: DNS1
      // param 5: DNS2
      // param 6: LeaseTime
    IP_CONFIGURATION_SET = 5;
      // param 0: Properties1
      // param 1: IP Address
      // param 2: Subnet Mask
      // param 3: Gateway
      // param 4: DNS1
      // param 5: DNS2
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_IRRIGATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    IRRIGATION_SYSTEM_INFO_GET = 1;
    IRRIGATION_SYSTEM_INFO_REPORT = 2;
      // param 0: Properties1
      // param 1: Total Number of Valves
      // param 2: Total Number of Valve Tables
      // param 3: Properties2
    IRRIGATION_SYSTEM_STATUS_GET = 3;
    IRRIGATION_SYSTEM_STATUS_REPORT = 4;
      // param 0: System Voltage
      // param 1: Sensor Status
      // param 2: Properties1
      // param 3: Flow Value
      // param 4: Properties2
      // param 5: Pressure Value
      // param 6: Shutoff Duration
      // param 7: System Error Status
      // param 8: Properties3
      // param 9: Valve ID
    IRRIGATION_SYSTEM_CONFIG_SET = 5;
      // param 0: Master Valve Delay
      // param 1: Properties1
      // param 2: High Pressure Threshold Value
      // param 3: Properties2
      // param 4: Low Pressure Threshold Value
      // param 5: Sensor Polarity
    IRRIGATION_SYSTEM_CONFIG_GET = 6;
    IRRIGATION_SYSTEM_CONFIG_REPORT = 7;
      // param 0: Master Valve Delay
      // param 1: Properties1
      // param 2: High Pressure Threshold Value
      // param 3: Properties2
      // param 4: Low Pressure Threshold Value
      // param 5: Sensor Polarity
    IRRIGATION_VALVE_INFO_GET = 8;
      // param 0: Properties1
      // param 1: Valve ID
    IRRIGATION_VALVE_INFO_REPORT = 9;
      // param 0: Properties1
      // param 1: Valve ID
      // param 2: Nominal Current
      // param 3: Valve Error Status
    IRRIGATION_VALVE_CONFIG_SET = 10;
      // param 0: Properties1
      // param 1: Valve ID
      // param 2: Nominal Current High Threshold
      // param 3: Nominal Current Low Threshold
      // param 4: Properties2
      // param 5: Maximum Flow Value
      // param 6: Properties3
      // param 7: Flow High Threshold Value
      // param 8: Properties4
      // param 9: Flow Low Threshold Value
      // param 10: Sensor Usage
    IRRIGATION_VALVE_CONFIG_GET = 11;
      // param 0: Properties1
      // param 1: Valve ID
    IRRIGATION_VALVE_CONFIG_REPORT = 12;
      // param 0: Properties1
      // param 1: Valve ID
      // param 2: Nominal Current High Threshold
      // param 3: Nominal Current Low Threshold
      // param 4: Properties2
      // param 5: Maximum Flow Value
      // param 6: Properties3
      // param 7: Flow High Threshold Value
      // param 8: Properties4
      // param 9: Flow Low Threshold Value
      // param 10: Sensor Usage
    IRRIGATION_VALVE_RUN = 13;
      // param 0: Properties1
      // param 1: Valve ID
      // param 2: Duration
    IRRIGATION_VALVE_TABLE_SET = 14;
      // param 0: Valve Table ID
      // param 1: vg1
    IRRIGATION_VALVE_TABLE_GET = 15;
      // param 0: Valve Table ID
    IRRIGATION_VALVE_TABLE_REPORT = 16;
      // param 0: Valve Table ID
      // param 1: vg1
    IRRIGATION_VALVE_TABLE_RUN = 17;
      // param 0: Valve Table ID
    IRRIGATION_SYSTEM_SHUTOFF = 18;
      // param 0: Duration
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_LANGUAGE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    LANGUAGE_GET = 1;
    LANGUAGE_REPORT = 2;
      // param 0: Language
      // param 1: Country
    LANGUAGE_SET = 3;
      // param 0: Language
      // param 1: Country
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_LOCK_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    LOCK_GET = 1;
    LOCK_REPORT = 2;
      // param 0: Lock State
    LOCK_SET = 3;
      // param 0: Lock State
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_MAILBOX_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    MAILBOX_CONFIGURATION_GET = 1;
    MAILBOX_CONFIGURATION_SET = 2;
      // param 0: Properties1
      // param 1: Forwarding Destination IPv6 Address
      // param 2: UDP Port Number
    MAILBOX_CONFIGURATION_REPORT = 3;
      // param 0: Properties1
      // param 1: Mailbox Capacity
      // param 2: Forwarding Destination IPv6 Address
      // param 3: UDP Port Number
    MAILBOX_QUEUE = 4;
      // param 0: Sequence Number
      // param 1: Properties1
      // param 2: Queue Handle
      // param 3: Mailbox Entry
    MAILBOX_WAKEUP_NOTIFICATION = 5;
      // param 0: Queue Handle
    MAILBOX_NODE_FAILING = 6;
      // param 0: Queue Handle
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_MANUFACTURER_PROPRIETARY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_MANUFACTURER_SPECIFIC_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    MANUFACTURER_SPECIFIC_GET = 1;
    MANUFACTURER_SPECIFIC_REPORT = 2;
      // param 0: Manufacturer ID
      // param 1: Product Type ID
      // param 2: Product ID
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_MARK_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_METER_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    METER_GET = 1;
    METER_REPORT = 2;
      // param 0: Meter Type
      // param 1: Properties1
      // param 2: Meter Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_METER_PULSE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    METER_PULSE_GET = 1;
    METER_PULSE_REPORT = 2;
      // param 0: Pulse Count
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_METER_TBL_CONFIG_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    METER_TBL_TABLE_POINT_ADM_NO_SET = 1;
      // param 0: Properties1
      // param 1: Meter Point Adm Number Character
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_METER_TBL_MONITOR_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    METER_TBL_STATUS_REPORT = 1;
      // param 0: Reports to follow
      // param 1: Current Operating Status
      // param 2: vg
    METER_TBL_STATUS_DATE_GET = 2;
      // param 0: Maximum Reports
      // param 1: Start Year
      // param 2: Start Month
      // param 3: Start Day
      // param 4: Start Hour Local Time
      // param 5: Start Minute Local Time
      // param 6: Start Second Local Time
      // param 7: Stop Year
      // param 8: Stop Month
      // param 9: Stop Day
      // param 10: Stop Hour Local Time
      // param 11: Stop Minute Local Time
      // param 12: Stop Second Local Time
    METER_TBL_STATUS_DEPTH_GET = 3;
      // param 0: Status Event Log Depth
    METER_TBL_STATUS_SUPPORTED_GET = 4;
    METER_TBL_STATUS_SUPPORTED_REPORT = 5;
      // param 0: Supported Operating Status
      // param 1: Status Event Log Depth
    METER_TBL_CURRENT_DATA_GET = 6;
      // param 0: Dataset Requested
    METER_TBL_CURRENT_DATA_REPORT = 7;
      // param 0: Reports to Follow
      // param 1: Properties1
      // param 2: Dataset
      // param 3: Year
      // param 4: Month
      // param 5: Day
      // param 6: Hour Local Time
      // param 7: Minute Local Time
      // param 8: Second Local Time
      // param 9: vg
    METER_TBL_HISTORICAL_DATA_GET = 8;
      // param 0: Maximum Reports
      // param 1: Historical Dataset Requested
      // param 2: Start Year
      // param 3: Start Month
      // param 4: Start Day
      // param 5: Start Hour Local Time
      // param 6: Start Minute Local Time
      // param 7: Start Second Local Time
      // param 8: Stop Year
      // param 9: Stop Month
      // param 10: Stop Day
      // param 11: Stop Hour Local Time
      // param 12: Stop Minute Local Time
      // param 13: Stop Second Local Time
    METER_TBL_HISTORICAL_DATA_REPORT = 9;
      // param 0: Reports to Follow
      // param 1: Properties1
      // param 2: Dataset
      // param 3: Year
      // param 4: Month
      // param 5: Day
      // param 6: Hour Local Time
      // param 7: Minute Local Time
      // param 8: Second Local Time
      // param 9: vg
    METER_TBL_REPORT = 10;
      // param 0: Properties1
      // param 1: Properties2
      // param 2: Dataset Supported
      // param 3: Dataset History Supported
      // param 4: Data History Supported
    METER_TBL_TABLE_CAPABILITY_GET = 11;
    METER_TBL_TABLE_ID_GET = 12;
    METER_TBL_TABLE_ID_REPORT = 13;
      // param 0: Properties1
      // param 1: Meter ID Character
    METER_TBL_TABLE_POINT_ADM_NO_GET = 14;
    METER_TBL_TABLE_POINT_ADM_NO_REPORT = 15;
      // param 0: Properties1
      // param 1: Meter Point Adm Number Character
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_METER_TBL_PUSH_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    METER_TBL_PUSH_CONFIGURATION_GET = 1;
    METER_TBL_PUSH_CONFIGURATION_REPORT = 2;
      // param 0: Properties1
      // param 1: Push Dataset
      // param 2: Interval Months
      // param 3: Interval Days
      // param 4: Interval Hours
      // param 5: Interval Minutes
      // param 6: Push Node ID
    METER_TBL_PUSH_CONFIGURATION_SET = 3;
      // param 0: Properties1
      // param 1: Push Dataset
      // param 2: Interval Months
      // param 3: Interval Days
      // param 4: Interval Hours
      // param 5: Interval Minutes
      // param 6: Push Node ID
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_MTP_WINDOW_COVERING_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    MOVE_TO_POSITION_GET = 1;
    MOVE_TO_POSITION_REPORT = 2;
      // param 0: Value
    MOVE_TO_POSITION_SET = 3;
      // param 0: Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_MULTI_CHANNEL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    MULTI_CHANNEL_CAPABILITY_GET = 1;
      // param 0: Properties1
    MULTI_CHANNEL_CAPABILITY_REPORT = 2;
      // param 0: Properties1
      // param 1: Generic Device Class
      // param 2: Specific Device Class
      // param 3: Command Class
    MULTI_CHANNEL_CMD_ENCAP = 3;
      // param 0: Properties1
      // param 1: Properties2
      // param 2: Command Class
      // param 3: Command
      // param 4: Parameter
    MULTI_CHANNEL_END_POINT_FIND = 4;
      // param 0: Generic Device Class
      // param 1: Specific Device Class
    MULTI_CHANNEL_END_POINT_FIND_REPORT = 5;
      // param 0: Reports to Follow
      // param 1: Generic Device Class
      // param 2: Specific Device Class
      // param 3: vg
    MULTI_CHANNEL_END_POINT_GET = 6;
    MULTI_CHANNEL_END_POINT_REPORT = 7;
      // param 0: Properties1
      // param 1: Properties2
    MULTI_INSTANCE_CMD_ENCAP = 8;
      // param 0: Properties1
      // param 1: Command Class
      // param 2: Command
      // param 3: Parameter
    MULTI_INSTANCE_GET = 9;
      // param 0: Command Class
    MULTI_INSTANCE_REPORT = 10;
      // param 0: Command Class
      // param 1: Properties1
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_MULTI_CHANNEL_ASSOCIATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    MULTI_CHANNEL_ASSOCIATION_GET = 1;
      // param 0: Grouping Identifier
    MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET = 2;
    MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT = 3;
      // param 0: Supported Groupings
    MULTI_CHANNEL_ASSOCIATION_REMOVE = 4;
      // param 0: Grouping Identifier
      // param 1: Node ID
      // param 2: Marker
      // param 3: vg
    MULTI_CHANNEL_ASSOCIATION_REPORT = 5;
      // param 0: Grouping Identifier
      // param 1: Max Nodes Supported
      // param 2: Reports to Follow
      // param 3: Node ID
      // param 4: Marker
      // param 5: vg
    MULTI_CHANNEL_ASSOCIATION_SET = 6;
      // param 0: Grouping Identifier
      // param 1: Node ID
      // param 2: Marker
      // param 3: vg
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_MULTI_CMD_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    MULTI_CMD_ENCAP = 1;
      // param 0: Number of Commands
      // param 1: Encapsulated_Command
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_MULTI_INSTANCE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    MULTI_INSTANCE_CMD_ENCAP = 1;
      // param 0: Instance
      // param 1: Command Class
      // param 2: Command
      // param 3: Parameter
    MULTI_INSTANCE_GET = 2;
      // param 0: Command Class
    MULTI_INSTANCE_REPORT = 3;
      // param 0: Command Class
      // param 1: Instances
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_MULTI_INSTANCE_ASSOCIATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    MULTI_INSTANCE_ASSOCIATION_GET = 1;
      // param 0: Grouping Identifier
    MULTI_INSTANCE_ASSOCIATION_GROUPINGS_GET = 2;
    MULTI_INSTANCE_ASSOCIATION_GROUPINGS_REPORT = 3;
      // param 0: Supported Groupings
    MULTI_INSTANCE_ASSOCIATION_REMOVE = 4;
      // param 0: Grouping identifier
      // param 1: Node ID
      // param 2: Marker
      // param 3: vg
    MULTI_INSTANCE_ASSOCIATION_REPORT = 5;
      // param 0: Grouping Identifier
      // param 1: Max Nodes Supported
      // param 2: Reports to Follow
      // param 3: Node ID
      // param 4: Marker
      // param 5: vg
    MULTI_INSTANCE_ASSOCIATION_SET = 6;
      // param 0: Grouping identifier
      // param 1: Node ID
      // param 2: Marker
      // param 3: vg
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_NETWORK_MANAGEMENT_BASIC_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    LEARN_MODE_SET = 1;
      // param 0: Seq. No
      // param 1: Reserved
      // param 2: Mode
    LEARN_MODE_SET_STATUS = 2;
      // param 0: Seq. No
      // param 1: Status
      // param 2: Reserved
      // param 3: New Node ID
    NODE_INFORMATION_SEND = 3;
      // param 0: Seq. No
      // param 1: Reserved
      // param 2: Destination Node ID
      // param 3: tx Options
    NETWORK_UPDATE_REQUEST = 4;
      // param 0: Seq. No
    NETWORK_UPDATE_REQUEST_STATUS = 5;
      // param 0: Seq. No
      // param 1: Status
    DEFAULT_SET = 6;
      // param 0: Seq. No
    DEFAULT_SET_COMPLETE = 7;
      // param 0: Seq. No
      // param 1: Status
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_NETWORK_MANAGEMENT_INCLUSION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    FAILED_NODE_REMOVE = 1;
      // param 0: Seq. No
      // param 1: Node ID
    FAILED_NODE_REMOVE_STATUS = 2;
      // param 0: Seq. No
      // param 1: Status
      // param 2: Node ID
    NODE_ADD = 3;
      // param 0: Seq. No
      // param 1: Reserved
      // param 2: Mode
      // param 3: tx Options
    NODE_ADD_STATUS = 4;
      // param 0: Seq. No
      // param 1: Status
      // param 2: Reserved
      // param 3: New Node ID
      // param 4: Node Info Length
      // param 5: Properties1
      // param 6: Properties2
      // param 7: Basic Device Class
      // param 8: Generic Device Class
      // param 9: Specific Device Class
      // param 10: Command Class
    NODE_REMOVE = 5;
      // param 0: Seq. No
      // param 1: Reserved
      // param 2: Mode
    NODE_REMOVE_STATUS = 6;
      // param 0: Seq. No
      // param 1: Status
      // param 2: NodeID
    FAILED_NODE_REPLACE = 7;
      // param 0: Seq. No
      // param 1: Node ID
      // param 2: tx Options
      // param 3: Mode
    FAILED_NODE_REPLACE_STATUS = 8;
      // param 0: Seq. No
      // param 1: Status
      // param 2: Node ID
    NODE_NEIGHBOR_UPDATE_REQUEST = 9;
      // param 0: Seq. No
      // param 1: Node ID
    NODE_NEIGHBOR_UPDATE_STATUS = 10;
      // param 0: Seq. No
      // param 1: Status
    RETURN_ROUTE_ASSIGN = 11;
      // param 0: Seq. No
      // param 1: Source Node ID
      // param 2: Destination Node ID
    RETURN_ROUTE_ASSIGN_COMPLETE = 12;
      // param 0: Seq. No
      // param 1: Status
    RETURN_ROUTE_DELETE = 13;
      // param 0: Seq. No
      // param 1: Node ID
    RETURN_ROUTE_DELETE_COMPLETE = 14;
      // param 0: Seq. No
      // param 1: Status
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    LAST_WORKING_ROUTE_SET = 1;
      // param 0: NodeID
      // param 1: Repeater 1
      // param 2: Repeater 2
      // param 3: Repeater 3
      // param 4: Repeater 4
      // param 5: Speed
    LAST_WORKING_ROUTE_GET = 2;
      // param 0: NodeID
    LAST_WORKING_ROUTE_REPORT = 3;
      // param 0: NodeID
      // param 1: Repeater 1
      // param 2: Repeater 2
      // param 3: Repeater 3
      // param 4: Repeater 4
      // param 5: Speed
    STATISTICS_GET = 4;
      // param 0: NodeID
    STATISTICS_REPORT = 5;
      // param 0: NodeID
      // param 1: Statistics
    STATISTICS_CLEAR = 6;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_NETWORK_MANAGEMENT_PRIMARY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    CONTROLLER_CHANGE = 1;
      // param 0: Seq. No
      // param 1: Reserved
      // param 2: Mode
      // param 3: tx Options
    CONTROLLER_CHANGE_STATUS = 2;
      // param 0: Seq. No
      // param 1: Status
      // param 2: Reserved
      // param 3: New Node ID
      // param 4: Node Info Length
      // param 5: Properties1
      // param 6: Properties2
      // param 7: Basic Device Class
      // param 8: Generic Device Class
      // param 9: Specific Device Class
      // param 10: Command Class
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_NETWORK_MANAGEMENT_PROXY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    NODE_INFO_CACHED_GET = 1;
      // param 0: Seq. No
      // param 1: Properties1
      // param 2: Node ID
    NODE_INFO_CACHED_REPORT = 2;
      // param 0: Seq. No
      // param 1: Properties1
      // param 2: Properties2
      // param 3: Properties3
      // param 4: Reserved
      // param 5: Basic Device Class
      // param 6: Generic Device Class
      // param 7: Specific Device Class
      // param 8: Non-Secure Command Class
      // param 9: Security Scheme 0 MARK
      // param 10: Security Scheme 0 Command Class
    NODE_LIST_GET = 3;
      // param 0: Seq. No
    NODE_LIST_REPORT = 4;
      // param 0: Seq. No
      // param 1: Status
      // param 2: Node List Controller ID
      // param 3: Node List Data
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_NODE_NAMING_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    NODE_NAMING_NODE_LOCATION_REPORT = 1;
      // param 0: Level
      // param 1: Node location char
    NODE_NAMING_NODE_LOCATION_SET = 2;
      // param 0: Level
      // param 1: Node location char
    NODE_NAMING_NODE_LOCATION_GET = 3;
    NODE_NAMING_NODE_NAME_GET = 4;
    NODE_NAMING_NODE_NAME_REPORT = 5;
      // param 0: Level
      // param 1: Node name char
    NODE_NAMING_NODE_NAME_SET = 6;
      // param 0: Level
      // param 1: Node name char
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_NON_INTEROPERABLE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_NOTIFICATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    NOTIFICATION_GET = 1;
      // param 0: V1 Alarm Type
      // param 1: Notification Type
      // param 2: Event
    NOTIFICATION_REPORT = 2;
      // param 0: V1 Alarm Type
      // param 1: V1 Alarm Level
      // param 2: Reserved
      // param 3: Notification Status
      // param 4: Notification Type
      // param 5: Event
      // param 6: Properties1
      // param 7: Event Parameter
      // param 8: Sequence Number
    NOTIFICATION_SET = 3;
      // param 0: Notification Type
      // param 1: Notification Status
    NOTIFICATION_SUPPORTED_GET = 4;
    NOTIFICATION_SUPPORTED_REPORT = 5;
      // param 0: Properties1
      // param 1: Bit Mask
    EVENT_SUPPORTED_GET = 6;
      // param 0: Notification Type
    EVENT_SUPPORTED_REPORT = 7;
      // param 0: Notification Type
      // param 1: Properties1
      // param 2: Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_NO_OPERATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_POWERLEVEL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    POWERLEVEL_GET = 1;
    POWERLEVEL_REPORT = 2;
      // param 0: Power level
      // param 1: Timeout
    POWERLEVEL_SET = 3;
      // param 0: Power level
      // param 1: Timeout
    POWERLEVEL_TEST_NODE_GET = 4;
    POWERLEVEL_TEST_NODE_REPORT = 5;
      // param 0: Test NodeID
      // param 1: Status of operation
      // param 2: Test Frame Count
    POWERLEVEL_TEST_NODE_SET = 6;
      // param 0: Test NodeID
      // param 1: Power level
      // param 2: Test frame count
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_PREPAYMENT_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    PREPAYMENT_BALANCE_GET = 1;
      // param 0: Properties1
    PREPAYMENT_BALANCE_REPORT = 2;
      // param 0: Properties1
      // param 1: Properties2
      // param 2: Balance Value
      // param 3: Properties3
      // param 4: Debt
      // param 5: Properties4
      // param 6: Emer Credit
      // param 7: Currency
      // param 8: Debt Recovery Percentage
    PREPAYMENT_SUPPORTED_GET = 3;
    PREPAYMENT_SUPPORTED_REPORT = 4;
      // param 0: Properties1
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_PREPAYMENT_ENCAPSULATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    CMD_ENCAPSULATION = 1;
      // param 0: Data
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_PROPRIETARY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    PROPRIETARY_GET = 1;
      // param 0: Data
    PROPRIETARY_REPORT = 2;
      // param 0: Data
    PROPRIETARY_SET = 3;
      // param 0: Data
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_PROTECTION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    PROTECTION_GET = 1;
    PROTECTION_REPORT = 2;
      // param 0: Protection State
    PROTECTION_SET = 3;
      // param 0: Protection State
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_RATE_TBL_CONFIG_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    RATE_TBL_REMOVE = 1;
      // param 0: Properties1
      // param 1: Rate Parameter Set ID
    RATE_TBL_SET = 2;
      // param 0: Rate Parameter Set ID
      // param 1: Properties1
      // param 2: Rate Character
      // param 3: Start Hour Local Time
      // param 4: Start Minute Local Time
      // param 5: Duration Minute
      // param 6: Properties2
      // param 7: Min Consumption Value
      // param 8: Max Consumption Value
      // param 9: Properties3
      // param 10: Max Demand Value
      // param 11: DCP Rate ID
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_RATE_TBL_MONITOR_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    RATE_TBL_ACTIVE_RATE_GET = 1;
    RATE_TBL_ACTIVE_RATE_REPORT = 2;
      // param 0: Rate Parameter Set ID
    RATE_TBL_CURRENT_DATA_GET = 3;
      // param 0: Rate Parameter Set ID
      // param 1: Dataset Requested
    RATE_TBL_CURRENT_DATA_REPORT = 4;
      // param 0: Reports to Follow
      // param 1: Rate Parameter Set ID
      // param 2: Dataset
      // param 3: Year
      // param 4: Month
      // param 5: Day
      // param 6: Hour Local Time
      // param 7: Minute Local Time
      // param 8: Second Local Time
      // param 9: vg
    RATE_TBL_GET = 5;
      // param 0: Rate Parameter Set ID
    RATE_TBL_HISTORICAL_DATA_GET = 6;
      // param 0: Maximum Reports
      // param 1: Rate Parameter Set ID
      // param 2: Dataset Requested
      // param 3: Start Year
      // param 4: Start Month
      // param 5: Start Day
      // param 6: Start Hour Local Time
      // param 7: Start Minute Local Time
      // param 8: Start Second Local Time
      // param 9: Stop Year
      // param 10: Stop Month
      // param 11: Stop Day
      // param 12: Stop Hour Local Time
      // param 13: Stop Minute Local Time
      // param 14: Stop Second Local Time
    RATE_TBL_HISTORICAL_DATA_REPORT = 7;
      // param 0: Reports to Follow
      // param 1: Rate Parameter Set ID
      // param 2: Dataset
      // param 3: Year
      // param 4: Month
      // param 5: Day
      // param 6: Hour Local Time
      // param 7: Minute Local Time
      // param 8: Second Local Time
      // param 9: vg
    RATE_TBL_REPORT = 8;
      // param 0: Rate Parameter Set ID
      // param 1: Properties1
      // param 2: Rate Character
      // param 3: Start Hour Local Time
      // param 4: Start Minute Local Time
      // param 5: Duration Minute
      // param 6: Properties2
      // param 7: Min Consumption Value
      // param 8: Max Consumption Value
      // param 9: Properties3
      // param 10: Max Demand Value
      // param 11: DCP Rate ID
    RATE_TBL_SUPPORTED_GET = 9;
    RATE_TBL_SUPPORTED_REPORT = 10;
      // param 0: Rates Supported
      // param 1: Parameter Set Supported Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_REMOTE_ASSOCIATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    REMOTE_ASSOCIATION_CONFIGURATION_GET = 1;
      // param 0: Local Grouping identifier
    REMOTE_ASSOCIATION_CONFIGURATION_REPORT = 2;
      // param 0: Local Grouping identifier
      // param 1: Remote NodeID
      // param 2: Remote Grouping identifier
    REMOTE_ASSOCIATION_CONFIGURATION_SET = 3;
      // param 0: Local Grouping identifier
      // param 1: Remote NodeID
      // param 2: Remote Grouping identifier
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_REMOTE_ASSOCIATION_ACTIVATE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    REMOTE_ASSOCIATION_ACTIVATE = 1;
      // param 0: Grouping identifier
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SCENE_ACTIVATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SCENE_ACTIVATION_SET = 1;
      // param 0: Scene ID
      // param 1: Dimming Duration
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SCENE_ACTUATOR_CONF_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SCENE_ACTUATOR_CONF_GET = 1;
      // param 0: Scene ID
    SCENE_ACTUATOR_CONF_REPORT = 2;
      // param 0: Scene ID
      // param 1: Level
      // param 2: Dimming Duration
    SCENE_ACTUATOR_CONF_SET = 3;
      // param 0: Scene ID
      // param 1: Dimming Duration
      // param 2: Level2
      // param 3: Level
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SCENE_CONTROLLER_CONF_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SCENE_CONTROLLER_CONF_GET = 1;
      // param 0: Group ID
    SCENE_CONTROLLER_CONF_REPORT = 2;
      // param 0: Group ID
      // param 1: Scene ID
      // param 2: Dimming Duration
    SCENE_CONTROLLER_CONF_SET = 3;
      // param 0: Group ID
      // param 1: Scene ID
      // param 2: Dimming Duration
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SCHEDULE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SCHEDULE_SUPPORTED_GET = 1;
    SCHEDULE_SUPPORTED_REPORT = 2;
      // param 0: Number of Supported Schedule ID
      // param 1: Properties1
      // param 2: Number of supported CC
      // param 3: vg1
      // param 4: Properties3
    COMMAND_SCHEDULE_SET = 3;
      // param 0: Schedule ID
      // param 1: User Identifier
      // param 2: Start Year
      // param 3: Properties1
      // param 4: Properties2
      // param 5: Properties3
      // param 6: Properties4
      // param 7: Properties5
      // param 8: Duration Byte
      // param 9: Reports to Follow
      // param 10: Number of Cmd to Follow
      // param 11: vg1
    COMMAND_SCHEDULE_GET = 4;
      // param 0: Schedule ID
    COMMAND_SCHEDULE_REPORT = 5;
      // param 0: Schedule ID
      // param 1: User Identifier
      // param 2: Start Year
      // param 3: Properties1
      // param 4: Properties2
      // param 5: Properties3
      // param 6: Properties4
      // param 7: Properties5
      // param 8: Duration Byte
      // param 9: Reports to Follow
      // param 10: Number of Cmd to Follow
      // param 11: vg1
    SCHEDULE_REMOVE = 6;
      // param 0: Schedule ID
    SCHEDULE_STATE_SET = 7;
      // param 0: Schedule ID
      // param 1: Schedule State
    SCHEDULE_STATE_GET = 8;
    SCHEDULE_STATE_REPORT = 9;
      // param 0: Number of Supported Schedule ID
      // param 1: Properties1
      // param 2: Properties2
      // param 3: Properties3
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SCHEDULE_ENTRY_LOCK_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET = 1;
      // param 0: Enabled
    SCHEDULE_ENTRY_LOCK_ENABLE_SET = 2;
      // param 0: User Identifier
      // param 1: Enabled
    SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET = 3;
      // param 0: User Identifier
      // param 1: Schedule Slot ID
    SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT = 4;
      // param 0: User Identifier
      // param 1: Schedule Slot ID
      // param 2: Day of Week
      // param 3: Start Hour
      // param 4: Start Minute
      // param 5: Stop Hour
      // param 6: Stop Minute
    SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET = 5;
      // param 0: Set Action
      // param 1: User Identifier
      // param 2: Schedule Slot ID
      // param 3: Day of Week
      // param 4: Start Hour
      // param 5: Start Minute
      // param 6: Stop Hour
      // param 7: Stop Minute
    SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET = 6;
      // param 0: User Identifier
      // param 1: Schedule Slot ID
    SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT = 7;
      // param 0: User Identifier
      // param 1: Schedule Slot ID
      // param 2: Start Year
      // param 3: Start Month
      // param 4: Start Day
      // param 5: Start Hour
      // param 6: Start Minute
      // param 7: Stop Year
      // param 8: Stop Month
      // param 9: Stop Day
      // param 10: Stop Hour
      // param 11: Stop Minute
    SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET = 8;
      // param 0: Set Action
      // param 1: User Identifier
      // param 2: Schedule Slot ID
      // param 3: Start Year
      // param 4: Start Month
      // param 5: Start Day
      // param 6: Start Hour
      // param 7: Start Minute
      // param 8: Stop Year
      // param 9: Stop Month
      // param 10: Stop Day
      // param 11: Stop Hour
      // param 12: Stop Minute
    SCHEDULE_ENTRY_TYPE_SUPPORTED_GET = 9;
    SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT = 10;
      // param 0: Number of Slots Week Day
      // param 1: Number of Slots Year Day
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SCREEN_ATTRIBUTES_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SCREEN_ATTRIBUTES_GET = 1;
    SCREEN_ATTRIBUTES_REPORT = 2;
      // param 0: Properties1
      // param 1: Number of Characters per Line
      // param 2: Size of Line Buffer
      // param 3: Numerical Presentation of a Character
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SCREEN_MD_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SCREEN_MD_GET = 1;
      // param 0: Number of Reports
      // param 1: Node ID
    SCREEN_MD_REPORT = 2;
      // param 0: Properties1
      // param 1: vg
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SECURITY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    NETWORK_KEY_SET = 1;
      // param 0: Network Key byte
    NETWORK_KEY_VERIFY = 2;
    SECURITY_COMMANDS_SUPPORTED_GET = 3;
    SECURITY_COMMANDS_SUPPORTED_REPORT = 4;
      // param 0: Reports to follow
      // param 1: Command Class support
      // param 2: COMMAND_CLASS_MARK
      // param 3: Command Class control
    SECURITY_MESSAGE_ENCAPSULATION = 5;
      // param 0: Initialization Vector byte
      // param 1: Properties1
      // param 2: Command byte
      // param 3: Receivers nonce Identifier
      // param 4: Message Authentication Code byte
    SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET = 6;
      // param 0: Initialization Vector byte
      // param 1: Properties1
      // param 2: Command byte
      // param 3: Receivers nonce Identifier
      // param 4: Message Authentication Code byte
    SECURITY_NONCE_GET = 7;
    SECURITY_NONCE_REPORT = 8;
      // param 0: Nonce byte
    SECURITY_SCHEME_GET = 9;
      // param 0: Supported Security Schemes
    SECURITY_SCHEME_INHERIT = 10;
      // param 0: Supported Security Schemes
    SECURITY_SCHEME_REPORT = 11;
      // param 0: Supported Security Schemes
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SECURITY_2_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SECURITY_2_NONCE_GET = 1;
      // param 0: Sequence Number
    SECURITY_2_NONCE_REPORT = 2;
      // param 0: Sequence Number
      // param 1: Properties1
      // param 2: Receivers Entropy Input
    SECURITY_2_MESSAGE_ENCAPSULATION = 3;
      // param 0: Sequence Number
      // param 1: Properties1
      // param 2: vg1
      // param 3: CCM Ciphertext Object
    KEX_GET = 4;
    KEX_REPORT = 5;
      // param 0: Properties1
      // param 1: Supported KEX Schemes
      // param 2: Supported ECDH Profiles
      // param 3: Requested Keys
    KEX_SET = 6;
      // param 0: Properties1
      // param 1: Selected KEX Scheme
      // param 2: Selected ECDH Profile
      // param 3: Granted Keys
    KEX_FAIL = 7;
      // param 0: KEX Fail Type
    PUBLIC_KEY_REPORT = 8;
      // param 0: Properties1
      // param 1: ECDH Public Key
    SECURITY_2_NETWORK_KEY_GET = 9;
      // param 0: Requested Key
    SECURITY_2_NETWORK_KEY_REPORT = 10;
      // param 0: Granted Key
      // param 1: Network Key
    SECURITY_2_NETWORK_KEY_VERIFY = 11;
    SECURITY_2_TRANSFER_END = 12;
      // param 0: Properties1
    SECURITY_2_COMMANDS_SUPPORTED_GET = 13;
    SECURITY_2_COMMANDS_SUPPORTED_REPORT = 14;
      // param 0: Command Class
    SECURITY_2_CAPABILITIES_GET = 15;
    SECURITY_2_CAPABILITIES_REPORT = 16;
      // param 0: Supported SPANs
      // param 1: Supported MPANs
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SECURITY_PANEL_MODE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SECURITY_PANEL_MODE_GET = 1;
    SECURITY_PANEL_MODE_REPORT = 2;
      // param 0: MODE
    SECURITY_PANEL_MODE_SET = 3;
      // param 0: MODE
    SECURITY_PANEL_MODE_SUPPORTED_GET = 4;
    SECURITY_PANEL_MODE_SUPPORTED_REPORT = 5;
      // param 0: Supported Mode Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SECURITY_PANEL_ZONE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SECURITY_PANEL_ZONE_NUMBER_SUPPORTED_GET = 1;
    SECURITY_PANEL_ZONE_STATE_GET = 2;
      // param 0: Zone Number
    SECURITY_PANEL_ZONE_STATE_REPORT = 3;
      // param 0: Zone number
      // param 1: Zone State
    SECURITY_PANEL_ZONE_SUPPORTED_REPORT = 4;
      // param 0: Parameters1
    SECURITY_PANEL_ZONE_TYPE_GET = 5;
      // param 0: Zone Number
    SECURITY_PANEL_ZONE_TYPE_REPORT = 6;
      // param 0: Zone Number
      // param 1: Zone Type
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SECURITY_PANEL_ZONE_SENSOR_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    COMMAND_CLASS_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_REPORT = 1;
      // param 0: Zone number
      // param 1: Number of Sensors
    SECURITY_PANEL_ZONE_SENSOR_TYPE_GET = 2;
      // param 0: Zone Number
      // param 1: Sensor Number
    SECURITY_PANEL_ZONE_SENSOR_TYPE_REPORT = 3;
      // param 0: Zone Number
      // param 1: Sensor Number
      // param 2: ZWave Alarm Type
    SECURITY_PANEL_ZONE_SENSOR_INSTALLED_GET = 4;
      // param 0: Zone number
    SECURITY_PANEL_ZONE_SENSOR_STATE_GET = 5;
      // param 0: Zone Number
      // param 1: Sensor Number
    SECURITY_PANEL_ZONE_SENSOR_STATE_REPORT = 6;
      // param 0: Zone Number
      // param 1: Sensor Number
      // param 2: ZWave Alarm Type
      // param 3: ZWave Alarm Event
      // param 4: Event Parameters
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SENSOR_ALARM_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SENSOR_ALARM_GET = 1;
      // param 0: Sensor Type
    SENSOR_ALARM_REPORT = 2;
      // param 0: Source Node ID
      // param 1: Sensor Type
      // param 2: Sensor State
      // param 3: Seconds
    SENSOR_ALARM_SUPPORTED_GET = 3;
    SENSOR_ALARM_SUPPORTED_REPORT = 4;
      // param 0: Number of Bit Masks
      // param 1: Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SENSOR_BINARY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SENSOR_BINARY_GET = 1;
    SENSOR_BINARY_REPORT = 2;
      // param 0: Sensor Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SENSOR_CONFIGURATION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SENSOR_TRIGGER_LEVEL_GET = 1;
    SENSOR_TRIGGER_LEVEL_REPORT = 2;
      // param 0: Sensor Type
      // param 1: Properties1
      // param 2: Trigger Value
    SENSOR_TRIGGER_LEVEL_SET = 3;
      // param 0: Properties1
      // param 1: Sensor Type
      // param 2: Properties2
      // param 3: Trigger Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SENSOR_MULTILEVEL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SENSOR_MULTILEVEL_GET = 1;
    SENSOR_MULTILEVEL_REPORT = 2;
      // param 0: Sensor Type
      // param 1: Level
      // param 2: Sensor Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SILENCE_ALARM_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SENSOR_ALARM_SET = 1;
      // param 0: Mode
      // param 1: Seconds
      // param 2: Number of Bit Masks
      // param 3: Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SIMPLE_AV_CONTROL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SIMPLE_AV_CONTROL_GET = 1;
    SIMPLE_AV_CONTROL_REPORT = 2;
      // param 0: Number of reports
    SIMPLE_AV_CONTROL_SET = 3;
      // param 0: Sequence Number
      // param 1: Properties1
      // param 2: Item ID
      // param 3: vg
    SIMPLE_AV_CONTROL_SUPPORTED_GET = 4;
      // param 0: Report No
    SIMPLE_AV_CONTROL_SUPPORTED_REPORT = 5;
      // param 0: Report No
      // param 1: Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SUPERVISION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SUPERVISION_GET = 1;
      // param 0: Properties1
      // param 1: Encapsulated Command Length
      // param 2: Encapsulated Command
    SUPERVISION_REPORT = 2;
      // param 0: Properties1
      // param 1: Status
      // param 2: Duration
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SWITCH_ALL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SWITCH_ALL_GET = 1;
    SWITCH_ALL_OFF = 2;
    SWITCH_ALL_ON = 3;
    SWITCH_ALL_REPORT = 4;
      // param 0: Mode
    SWITCH_ALL_SET = 5;
      // param 0: Mode
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SWITCH_BINARY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SWITCH_BINARY_GET = 1;
    SWITCH_BINARY_REPORT = 2;
      // param 0: Value
    SWITCH_BINARY_SET = 3;
      // param 0: Switch Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SWITCH_COLOR_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SWITCH_COLOR_SUPPORTED_GET = 1;
    SWITCH_COLOR_SUPPORTED_REPORT = 2;
      // param 0: Color Component mask
    SWITCH_COLOR_GET = 3;
      // param 0: Color Component ID
    SWITCH_COLOR_REPORT = 4;
      // param 0: Color Component ID
      // param 1: Value
    SWITCH_COLOR_SET = 5;
      // param 0: Properties1
      // param 1: vg1
    SWITCH_COLOR_START_LEVEL_CHANGE = 6;
      // param 0: Properties1
      // param 1: Color Component ID
      // param 2: Start Level
    SWITCH_COLOR_STOP_LEVEL_CHANGE = 7;
      // param 0: Color Component ID
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SWITCH_MULTILEVEL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SWITCH_MULTILEVEL_GET = 1;
    SWITCH_MULTILEVEL_REPORT = 2;
      // param 0: Value
    SWITCH_MULTILEVEL_SET = 3;
      // param 0: Value
    SWITCH_MULTILEVEL_START_LEVEL_CHANGE = 4;
      // param 0: Level
      // param 1: Start Level
    SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE = 5;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SWITCH_TOGGLE_BINARY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SWITCH_TOGGLE_BINARY_SET = 1;
    SWITCH_TOGGLE_BINARY_GET = 2;
    SWITCH_TOGGLE_BINARY_REPORT = 3;
      // param 0: Value
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_SWITCH_TOGGLE_MULTILEVEL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    SWITCH_TOGGLE_MULTILEVEL_SET = 1;
    SWITCH_TOGGLE_MULTILEVEL_GET = 2;
    SWITCH_TOGGLE_MULTILEVEL_REPORT = 3;
      // param 0: Value
    SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE = 4;
      // param 0: Level
      // param 1: Start Level
    SWITCH_TOGGLE_MULTILEVEL_STOP_LEVEL_CHANGE = 5;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_TARIFF_CONFIG_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    TARIFF_TBL_REMOVE = 1;
      // param 0: Properties1
      // param 1: Rate Parameter Set ID
    TARIFF_TBL_SET = 2;
      // param 0: Rate Parameter Set ID
      // param 1: Properties1
      // param 2: Tariff Value
    TARIFF_TBL_SUPPLIER_SET = 3;
      // param 0: Year
      // param 1: Month
      // param 2: Day
      // param 3: Hour Local Time
      // param 4: Minute Local Time
      // param 5: Second Local Time
      // param 6: Currency
      // param 7: Properties1
      // param 8: Standing Charge Value
      // param 9: Properties2
      // param 10: Supplier Character
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_TARIFF_TBL_MONITOR_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    TARIFF_TBL_COST_GET = 1;
      // param 0: Rate Parameter Set ID
      // param 1: Start Year
      // param 2: Start Month
      // param 3: Start Day
      // param 4: Start Hour Local Time
      // param 5: Start Minute Local Time
      // param 6: Stop Year
      // param 7: Stop Month
      // param 8: Stop Day
      // param 9: Stop Hour Local Time
      // param 10: Stop Minute Local Time
    TARIFF_TBL_COST_REPORT = 2;
      // param 0: Rate Parameter Set ID
      // param 1: Properties1
      // param 2: Start Year
      // param 3: Start Month
      // param 4: Start Day
      // param 5: Start Hour Local Time
      // param 6: Start Minute Local Time
      // param 7: Stop Year
      // param 8: Stop Month
      // param 9: Stop Day
      // param 10: Stop Hour Local Time
      // param 11: Stop Minute Local Time
      // param 12: Currency
      // param 13: Properties2
      // param 14: Cost Value
    TARIFF_TBL_GET = 3;
      // param 0: Rate Parameter Set ID
    TARIFF_TBL_REPORT = 4;
      // param 0: Rate Parameter Set ID
      // param 1: Properties1
      // param 2: Tariff Value
    TARIFF_TBL_SUPPLIER_GET = 5;
    TARIFF_TBL_SUPPLIER_REPORT = 6;
      // param 0: Year
      // param 1: Month
      // param 2: Day
      // param 3: Hour Local Time
      // param 4: Minute Local Time
      // param 5: Second Local Time
      // param 6: Currency
      // param 7: Properties1
      // param 8: Standing Charge Value
      // param 9: Properties2
      // param 10: Supplier Character
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_THERMOSTAT_FAN_MODE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    THERMOSTAT_FAN_MODE_GET = 1;
    THERMOSTAT_FAN_MODE_REPORT = 2;
      // param 0: Level
    THERMOSTAT_FAN_MODE_SET = 3;
      // param 0: Level
    THERMOSTAT_FAN_MODE_SUPPORTED_GET = 4;
    THERMOSTAT_FAN_MODE_SUPPORTED_REPORT = 5;
      // param 0: Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_THERMOSTAT_FAN_STATE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    THERMOSTAT_FAN_STATE_GET = 1;
    THERMOSTAT_FAN_STATE_REPORT = 2;
      // param 0: Level
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_THERMOSTAT_HEATING_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    THERMOSTAT_HEATING_STATUS_REPORT = 1;
      // param 0: Status
    THERMOSTAT_HEATING_MODE_GET = 2;
    THERMOSTAT_HEATING_MODE_REPORT = 3;
      // param 0: Mode
    THERMOSTAT_HEATING_MODE_SET = 4;
      // param 0: Mode
    THERMOSTAT_HEATING_RELAY_STATUS_GET = 5;
    THERMOSTAT_HEATING_RELAY_STATUS_REPORT = 6;
      // param 0: Relay Status
    THERMOSTAT_HEATING_SETPOINT_GET = 7;
      // param 0: Setpoint Nr
    THERMOSTAT_HEATING_SETPOINT_REPORT = 8;
      // param 0: Setpoint Nr
      // param 1: Properties1
      // param 2: Value
    THERMOSTAT_HEATING_SETPOINT_SET = 9;
      // param 0: Setpoint Nr
      // param 1: Properties1
      // param 2: Value
    THERMOSTAT_HEATING_STATUS_GET = 10;
    THERMOSTAT_HEATING_STATUS_SET = 11;
      // param 0: Status
    THERMOSTAT_HEATING_TIMED_OFF_SET = 12;
      // param 0: Minutes
      // param 1: Hours
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_THERMOSTAT_MODE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    THERMOSTAT_MODE_GET = 1;
    THERMOSTAT_MODE_REPORT = 2;
      // param 0: Level
    THERMOSTAT_MODE_SET = 3;
      // param 0: Level
    THERMOSTAT_MODE_SUPPORTED_GET = 4;
    THERMOSTAT_MODE_SUPPORTED_REPORT = 5;
      // param 0: Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_THERMOSTAT_OPERATING_STATE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    THERMOSTAT_OPERATING_STATE_GET = 1;
    THERMOSTAT_OPERATING_STATE_REPORT = 2;
      // param 0: Level
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_THERMOSTAT_SETBACK_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    THERMOSTAT_SETBACK_GET = 1;
    THERMOSTAT_SETBACK_REPORT = 2;
      // param 0: Properties1
      // param 1: Setback State
    THERMOSTAT_SETBACK_SET = 3;
      // param 0: Properties1
      // param 1: Setback State
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_THERMOSTAT_SETPOINT_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    THERMOSTAT_SETPOINT_GET = 1;
      // param 0: Level
    THERMOSTAT_SETPOINT_REPORT = 2;
      // param 0: Level
      // param 1: Level2
      // param 2: Value
    THERMOSTAT_SETPOINT_SET = 3;
      // param 0: Level
      // param 1: Level2
      // param 2: Value
    THERMOSTAT_SETPOINT_SUPPORTED_GET = 4;
    THERMOSTAT_SETPOINT_SUPPORTED_REPORT = 5;
      // param 0: Bit Mask
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_TIME_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    DATE_GET = 1;
    DATE_REPORT = 2;
      // param 0: Year
      // param 1: Month
      // param 2: Day
    TIME_GET = 3;
    TIME_REPORT = 4;
      // param 0: Hour Local Time
      // param 1: Minute Local Time
      // param 2: Second Local Time
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_TIME_PARAMETERS_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    TIME_PARAMETERS_GET = 1;
    TIME_PARAMETERS_REPORT = 2;
      // param 0: Year
      // param 1: Month
      // param 2: Day
      // param 3: Hour UTC
      // param 4: Minute UTC
      // param 5: Second UTC
    TIME_PARAMETERS_SET = 3;
      // param 0: Year
      // param 1: Month
      // param 2: Day
      // param 3: Hour UTC
      // param 4: Minute UTC
      // param 5: Second UTC
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_TRANSPORT_SERVICE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    COMMAND_FIRST_SEGMENT = 1;
      // param 0: Properties1
      // param 1: datagram_size_2
      // param 2: Properties2
      // param 3: Header Extension Length
      // param 4: Header Extension
      // param 5: Payload
      // param 6: Frame Check Sequence
    COMMAND_SEGMENT_COMPLETE = 2;
      // param 0: Properties1
      // param 1: Properties2
    COMMAND_SEGMENT_REQUEST = 3;
      // param 0: Properties1
      // param 1: Properties2
      // param 2: datagram_offset_2
    COMMAND_SEGMENT_WAIT = 4;
      // param 0: Properties1
      // param 1: pending_fragments
    COMMAND_SUBSEQUENT_SEGMENT = 5;
      // param 0: Properties1
      // param 1: datagram_size_2
      // param 2: Properties2
      // param 3: datagram_offset_2
      // param 4: Header Extension Length
      // param 5: Header Extension
      // param 6: Payload
      // param 7: Frame Check Sequence
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_USER_CODE_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    USER_CODE_GET = 1;
      // param 0: User Identifier
    USER_CODE_REPORT = 2;
      // param 0: User Identifier
      // param 1: User ID Status
      // param 2: USER_CODE
    USER_CODE_SET = 3;
      // param 0: User Identifier
      // param 1: User ID Status
      // param 2: USER_CODE
    USERS_NUMBER_GET = 4;
    USERS_NUMBER_REPORT = 5;
      // param 0: Supported Users
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_VERSION_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    VERSION_COMMAND_CLASS_GET = 1;
      // param 0: Requested Command Class
    VERSION_COMMAND_CLASS_REPORT = 2;
      // param 0: Requested Command Class
      // param 1: Command Class Version
    VERSION_GET = 3;
    VERSION_REPORT = 4;
      // param 0: Z-Wave Library Type
      // param 1: Z-Wave Protocol Version
      // param 2: Z-Wave Protocol Sub Version
      // param 3: Application Version
      // param 4: Application Sub Version
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_WAKE_UP_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    WAKE_UP_INTERVAL_GET = 1;
    WAKE_UP_INTERVAL_REPORT = 2;
      // param 0: Seconds
      // param 1: NodeID
    WAKE_UP_INTERVAL_SET = 3;
      // param 0: Seconds
      // param 1: NodeID
    WAKE_UP_NO_MORE_INFORMATION = 4;
    WAKE_UP_NOTIFICATION = 5;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_WINDOW_COVERING_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    WINDOW_COVERING_SUPPORTED_GET = 1;
    WINDOW_COVERING_SUPPORTED_REPORT = 2;
      // param 0: Properties1
      // param 1: Parameter Mask
    WINDOW_COVERING_GET = 3;
      // param 0: Parameter ID
    WINDOW_COVERING_REPORT = 4;
      // param 0: Parameter ID
      // param 1: Current Value
      // param 2: Target Value
      // param 3: Duration
    WINDOW_COVERING_SET = 5;
      // param 0: Properties1
      // param 1: vg1
      // param 2: Duration
    WINDOW_COVERING_START_LEVEL_CHANGE = 6;
      // param 0: Properties1
      // param 1: Parameter ID
      // param 2: Duration
    WINDOW_COVERING_STOP_LEVEL_CHANGE = 7;
      // param 0: Parameter ID
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ZENSOR_NET_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    BIND_ACCEPT = 1;
    BIND_COMPLETE = 2;
    BIND_REQUEST = 3;
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ZIP_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    COMMAND_ZIP_PACKET = 1;
      // param 0: Properties1
      // param 1: Properties2
      // param 2: Seq No
      // param 3: Properties3
      // param 4: Properties4
      // param 5: Header extension
      // param 6: Z-Wave command
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ZIP_6LOWPAN_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    LOWPAN_FIRST_FRAGMENT = 1;
      // param 0: Properties1
      // param 1: Datagram Size 2
      // param 2: Datagram Tag
      // param 3: Payload
    LOWPAN_SUBSEQUENT_FRAGMENT = 2;
      // param 0: Properties1
      // param 1: Datagram Size 2
      // param 2: Datagram Tag
      // param 3: Datagram Offset
      // param 4: Payload
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ZIP_GATEWAY_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    GATEWAY_MODE_SET = 1;
      // param 0: Mode
    GATEWAY_MODE_GET = 2;
    GATEWAY_MODE_REPORT = 3;
      // param 0: Mode
    GATEWAY_PEER_SET = 4;
      // param 0: Peer Profile
      // param 1: IPv6 Address
      // param 2: Port
      // param 3: Properties1
      // param 4: Peer Name
    GATEWAY_PEER_GET = 5;
      // param 0: Peer Profile
    GATEWAY_PEER_REPORT = 6;
      // param 0: Peer Profile
      // param 1: Peer Count
      // param 2: IPv6 Address
      // param 3: Port
      // param 4: Properties1
      // param 5: Peer Name
    GATEWAY_LOCK_SET = 7;
      // param 0: Properties1
    UNSOLICITED_DESTINATION_SET = 8;
      // param 0: Unsolicited IPv6 Destination
      // param 1: Unsolicited Destination Port
    UNSOLICITED_DESTINATION_GET = 9;
    UNSOLICITED_DESTINATION_REPORT = 10;
      // param 0: Unsolicited IPv6 Destination
      // param 1: Unsolicited Destination Port
    COMMAND_APPLICATION_NODE_INFO_SET = 11;
      // param 0: Non-Secure Command Class
      // param 1: Security Scheme 0 MARK
      // param 2: Security Scheme 0 Command Class
    COMMAND_APPLICATION_NODE_INFO_GET = 12;
    COMMAND_APPLICATION_NODE_INFO_REPORT = 13;
      // param 0: Non-Secure Command Class
      // param 1: Security Scheme 0 MARK
      // param 2: Security Scheme 0 Command Class
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ZIP_NAMING_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    ZIP_NAMING_NAME_SET = 1;
      // param 0: Name
    ZIP_NAMING_NAME_GET = 2;
    ZIP_NAMING_NAME_REPORT = 3;
      // param 0: Name
    ZIP_NAMING_LOCATION_SET = 4;
      // param 0: Location
    ZIP_NAMING_LOCATION_GET = 5;
    ZIP_NAMING_LOCATION_REPORT = 6;
      // param 0: Location
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ZIP_ND_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    ZIP_NODE_SOLICITATION = 1;
      // param 0: Reserved
      // param 1: Node ID
      // param 2: IPv6 Address
    ZIP_INV_NODE_SOLICITATION = 2;
      // param 0: Properties1
      // param 1: Node ID
    ZIP_NODE_ADVERTISEMENT = 3;
      // param 0: Properties1
      // param 1: Node ID
      // param 2: IPv6 Address
      // param 3: Home ID
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ZIP_PORTAL_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    GATEWAY_CONFIGURATION_SET = 1;
      // param 0: LAN IPv6 Address
      // param 1: LAN IPv6 Prefix Length
      // param 2: Portal IPv6 Prefix
      // param 3: Portal IPv6 Prefix Length
      // param 4: Default Gateway IPv6 Address
      // param 5: PAN IPv6 Prefix
    GATEWAY_CONFIGURATION_STATUS = 2;
      // param 0: Status
    GATEWAY_CONFIGURATION_GET = 3;
    GATEWAY_CONFIGURATION_REPORT = 4;
      // param 0: LAN IPv6 Address
      // param 1: LAN IPv6 Prefix Length
      // param 2: Portal IPv6 Prefix
      // param 3: Portal IPv6 Prefix Length
      // param 4: Default Gateway IPv6 Address
      // param 5: PAN IPv6 Prefix
   }
   CmdType cmd = 1;
  }

  message COMMAND_CLASS_ZWAVEPLUS_INFO_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    ZWAVEPLUS_INFO_GET = 1;
    ZWAVEPLUS_INFO_REPORT = 2;
      // param 0: Z-Wave+ Version
      // param 1: Role Type
      // param 2: Node Type
   }
   CmdType cmd = 1;
  }

  message ZWAVE_CMD_CLASS_MSG {
   enum  CmdType { 
    UNDEFINED = 0;
    ACCEPT_LOST = 1;
    ASSIGN_ID = 2;
    ASSIGN_RETURN_ROUTE = 3;
    CMD_ASSIGN_SUC_RETURN_ROUTE = 4;
    CMD_AUTOMATIC_CONTROLLER_UPDATE_START = 5;
    CMD_NODES_EXIST = 6;
    CMD_NODES_EXIST_REPLY = 7;
    CMD_SET_NWI_MODE = 8;
    COMMAND_COMPLETE = 9;
    FIND_NODES_IN_RANGE = 10;
    GET_NODES_IN_RANGE = 11;
    LOST = 12;
    NEW_NODE_REGISTERED = 13;
    NEW_RANGE_REGISTERED = 14;
    NODE_INFO = 15;
      // param 0: Capability
      // param 1: Security
      // param 2: Properties1
      // param 3: Basic Device Class
      // param 4: Generic Device Class
      // param 5: Specific Device Class
      // param 6: Command Classes
    NODE_RANGE_INFO = 16;
    ZWAVE_CMD_NOP = 17;
    CMD_NOP_POWER = 18;
    REQUEST_NODE_INFO = 19;
    ZWAVE_CMD_RESERVE_NODE_IDS = 20;
    CMD_RESERVED_IDS = 21;
    CMD_SET_SUC = 22;
    CMD_SET_SUC_ACK = 23;
    CMD_STATIC_ROUTE_REQUEST = 24;
    CMD_SUC_NODE_ID = 25;
    TRANSFER_END = 26;
    TRANSFER_NEW_PRIMARY_COMPLETE = 27;
    TRANSFER_NODE_INFO = 28;
    TRANSFER_PRESENTATION = 29;
    TRANSFER_RANGE_INFO = 30;
    EXCLUDE_REQUEST = 31;
    ASSIGN_RETURN_ROUTE_PRIORITY = 32;
    ASSIGN_SUC_RETURN_ROUTE_PRIORITY = 33;
   }
   CmdType cmd = 1;
  }
  oneof class_oneofmessage {
    COMMAND_CLASS_ALARM_MSG COMMAND_CLASS_ALARM = 1;
    COMMAND_CLASS_ANTITHEFT_MSG COMMAND_CLASS_ANTITHEFT = 2;
    COMMAND_CLASS_APPLICATION_CAPABILITY_MSG COMMAND_CLASS_APPLICATION_CAPABILITY = 3;
    COMMAND_CLASS_APPLICATION_STATUS_MSG COMMAND_CLASS_APPLICATION_STATUS = 4;
    COMMAND_CLASS_ASSOCIATION_MSG COMMAND_CLASS_ASSOCIATION = 5;
    COMMAND_CLASS_ASSOCIATION_COMMAND_CONFIGURATION_MSG COMMAND_CLASS_ASSOCIATION_COMMAND_CONFIGURATION = 6;
    COMMAND_CLASS_ASSOCIATION_GRP_INFO_MSG COMMAND_CLASS_ASSOCIATION_GRP_INFO = 7;
    COMMAND_CLASS_AV_CONTENT_DIRECTORY_MD_MSG COMMAND_CLASS_AV_CONTENT_DIRECTORY_MD = 8;
    COMMAND_CLASS_AV_CONTENT_SEARCH_MD_MSG COMMAND_CLASS_AV_CONTENT_SEARCH_MD = 9;
    COMMAND_CLASS_AV_RENDERER_STATUS_MSG COMMAND_CLASS_AV_RENDERER_STATUS = 10;
    COMMAND_CLASS_AV_TAGGING_MD_MSG COMMAND_CLASS_AV_TAGGING_MD = 11;
    COMMAND_CLASS_BARRIER_OPERATOR_MSG COMMAND_CLASS_BARRIER_OPERATOR = 12;
    COMMAND_CLASS_BASIC_MSG COMMAND_CLASS_BASIC = 13;
    COMMAND_CLASS_BASIC_TARIFF_INFO_MSG COMMAND_CLASS_BASIC_TARIFF_INFO = 14;
    COMMAND_CLASS_BASIC_WINDOW_COVERING_MSG COMMAND_CLASS_BASIC_WINDOW_COVERING = 15;
    COMMAND_CLASS_BATTERY_MSG COMMAND_CLASS_BATTERY = 16;
    COMMAND_CLASS_CENTRAL_SCENE_MSG COMMAND_CLASS_CENTRAL_SCENE = 17;
    COMMAND_CLASS_CHIMNEY_FAN_MSG COMMAND_CLASS_CHIMNEY_FAN = 18;
    COMMAND_CLASS_CLIMATE_CONTROL_SCHEDULE_MSG COMMAND_CLASS_CLIMATE_CONTROL_SCHEDULE = 19;
    COMMAND_CLASS_CLOCK_MSG COMMAND_CLASS_CLOCK = 20;
    COMMAND_CLASS_CONFIGURATION_MSG COMMAND_CLASS_CONFIGURATION = 21;
    COMMAND_CLASS_CONTROLLER_REPLICATION_MSG COMMAND_CLASS_CONTROLLER_REPLICATION = 22;
    COMMAND_CLASS_CRC_16_ENCAP_MSG COMMAND_CLASS_CRC_16_ENCAP = 23;
    COMMAND_CLASS_DCP_CONFIG_MSG COMMAND_CLASS_DCP_CONFIG = 24;
    COMMAND_CLASS_DCP_MONITOR_MSG COMMAND_CLASS_DCP_MONITOR = 25;
    COMMAND_CLASS_DEVICE_RESET_LOCALLY_MSG COMMAND_CLASS_DEVICE_RESET_LOCALLY = 26;
    COMMAND_CLASS_DMX_MSG COMMAND_CLASS_DMX = 27;
    COMMAND_CLASS_DOOR_LOCK_MSG COMMAND_CLASS_DOOR_LOCK = 28;
    COMMAND_CLASS_DOOR_LOCK_LOGGING_MSG COMMAND_CLASS_DOOR_LOCK_LOGGING = 29;
    COMMAND_CLASS_ENERGY_PRODUCTION_MSG COMMAND_CLASS_ENERGY_PRODUCTION = 30;
    COMMAND_CLASS_ENTRY_CONTROL_MSG COMMAND_CLASS_ENTRY_CONTROL = 31;
    COMMAND_CLASS_FIRMWARE_UPDATE_MD_MSG COMMAND_CLASS_FIRMWARE_UPDATE_MD = 32;
    COMMAND_CLASS_GEOGRAPHIC_LOCATION_MSG COMMAND_CLASS_GEOGRAPHIC_LOCATION = 33;
    COMMAND_CLASS_GROUPING_NAME_MSG COMMAND_CLASS_GROUPING_NAME = 34;
    COMMAND_CLASS_HAIL_MSG COMMAND_CLASS_HAIL = 35;
    COMMAND_CLASS_HRV_CONTROL_MSG COMMAND_CLASS_HRV_CONTROL = 36;
    COMMAND_CLASS_HRV_STATUS_MSG COMMAND_CLASS_HRV_STATUS = 37;
    COMMAND_CLASS_HUMIDITY_CONTROL_MODE_MSG COMMAND_CLASS_HUMIDITY_CONTROL_MODE = 38;
    COMMAND_CLASS_HUMIDITY_CONTROL_OPERATING_STATE_MSG COMMAND_CLASS_HUMIDITY_CONTROL_OPERATING_STATE = 39;
    COMMAND_CLASS_HUMIDITY_CONTROL_SETPOINT_MSG COMMAND_CLASS_HUMIDITY_CONTROL_SETPOINT = 40;
    COMMAND_CLASS_INCLUSION_CONTROLLER_MSG COMMAND_CLASS_INCLUSION_CONTROLLER = 41;
    COMMAND_CLASS_INDICATOR_MSG COMMAND_CLASS_INDICATOR = 42;
    COMMAND_CLASS_IP_ASSOCIATION_MSG COMMAND_CLASS_IP_ASSOCIATION = 43;
    COMMAND_CLASS_IP_CONFIGURATION_MSG COMMAND_CLASS_IP_CONFIGURATION = 44;
    COMMAND_CLASS_IRRIGATION_MSG COMMAND_CLASS_IRRIGATION = 45;
    COMMAND_CLASS_LANGUAGE_MSG COMMAND_CLASS_LANGUAGE = 46;
    COMMAND_CLASS_LOCK_MSG COMMAND_CLASS_LOCK = 47;
    COMMAND_CLASS_MAILBOX_MSG COMMAND_CLASS_MAILBOX = 48;
    COMMAND_CLASS_MANUFACTURER_PROPRIETARY_MSG COMMAND_CLASS_MANUFACTURER_PROPRIETARY = 49;
    COMMAND_CLASS_MANUFACTURER_SPECIFIC_MSG COMMAND_CLASS_MANUFACTURER_SPECIFIC = 50;
    COMMAND_CLASS_MARK_MSG COMMAND_CLASS_MARK = 51;
    COMMAND_CLASS_METER_MSG COMMAND_CLASS_METER = 52;
    COMMAND_CLASS_METER_PULSE_MSG COMMAND_CLASS_METER_PULSE = 53;
    COMMAND_CLASS_METER_TBL_CONFIG_MSG COMMAND_CLASS_METER_TBL_CONFIG = 54;
    COMMAND_CLASS_METER_TBL_MONITOR_MSG COMMAND_CLASS_METER_TBL_MONITOR = 55;
    COMMAND_CLASS_METER_TBL_PUSH_MSG COMMAND_CLASS_METER_TBL_PUSH = 56;
    COMMAND_CLASS_MTP_WINDOW_COVERING_MSG COMMAND_CLASS_MTP_WINDOW_COVERING = 57;
    COMMAND_CLASS_MULTI_CHANNEL_MSG COMMAND_CLASS_MULTI_CHANNEL = 58;
    COMMAND_CLASS_MULTI_CHANNEL_ASSOCIATION_MSG COMMAND_CLASS_MULTI_CHANNEL_ASSOCIATION = 59;
    COMMAND_CLASS_MULTI_CMD_MSG COMMAND_CLASS_MULTI_CMD = 60;
    COMMAND_CLASS_MULTI_INSTANCE_MSG COMMAND_CLASS_MULTI_INSTANCE = 61;
    COMMAND_CLASS_MULTI_INSTANCE_ASSOCIATION_MSG COMMAND_CLASS_MULTI_INSTANCE_ASSOCIATION = 62;
    COMMAND_CLASS_NETWORK_MANAGEMENT_BASIC_MSG COMMAND_CLASS_NETWORK_MANAGEMENT_BASIC = 63;
    COMMAND_CLASS_NETWORK_MANAGEMENT_INCLUSION_MSG COMMAND_CLASS_NETWORK_MANAGEMENT_INCLUSION = 64;
    COMMAND_CLASS_NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE_MSG COMMAND_CLASS_NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE = 65;
    COMMAND_CLASS_NETWORK_MANAGEMENT_PRIMARY_MSG COMMAND_CLASS_NETWORK_MANAGEMENT_PRIMARY = 66;
    COMMAND_CLASS_NETWORK_MANAGEMENT_PROXY_MSG COMMAND_CLASS_NETWORK_MANAGEMENT_PROXY = 67;
    COMMAND_CLASS_NODE_NAMING_MSG COMMAND_CLASS_NODE_NAMING = 68;
    COMMAND_CLASS_NON_INTEROPERABLE_MSG COMMAND_CLASS_NON_INTEROPERABLE = 69;
    COMMAND_CLASS_NOTIFICATION_MSG COMMAND_CLASS_NOTIFICATION = 70;
    COMMAND_CLASS_NO_OPERATION_MSG COMMAND_CLASS_NO_OPERATION = 71;
    COMMAND_CLASS_POWERLEVEL_MSG COMMAND_CLASS_POWERLEVEL = 72;
    COMMAND_CLASS_PREPAYMENT_MSG COMMAND_CLASS_PREPAYMENT = 73;
    COMMAND_CLASS_PREPAYMENT_ENCAPSULATION_MSG COMMAND_CLASS_PREPAYMENT_ENCAPSULATION = 74;
    COMMAND_CLASS_PROPRIETARY_MSG COMMAND_CLASS_PROPRIETARY = 75;
    COMMAND_CLASS_PROTECTION_MSG COMMAND_CLASS_PROTECTION = 76;
    COMMAND_CLASS_RATE_TBL_CONFIG_MSG COMMAND_CLASS_RATE_TBL_CONFIG = 77;
    COMMAND_CLASS_RATE_TBL_MONITOR_MSG COMMAND_CLASS_RATE_TBL_MONITOR = 78;
    COMMAND_CLASS_REMOTE_ASSOCIATION_MSG COMMAND_CLASS_REMOTE_ASSOCIATION = 79;
    COMMAND_CLASS_REMOTE_ASSOCIATION_ACTIVATE_MSG COMMAND_CLASS_REMOTE_ASSOCIATION_ACTIVATE = 80;
    COMMAND_CLASS_SCENE_ACTIVATION_MSG COMMAND_CLASS_SCENE_ACTIVATION = 81;
    COMMAND_CLASS_SCENE_ACTUATOR_CONF_MSG COMMAND_CLASS_SCENE_ACTUATOR_CONF = 82;
    COMMAND_CLASS_SCENE_CONTROLLER_CONF_MSG COMMAND_CLASS_SCENE_CONTROLLER_CONF = 83;
    COMMAND_CLASS_SCHEDULE_MSG COMMAND_CLASS_SCHEDULE = 84;
    COMMAND_CLASS_SCHEDULE_ENTRY_LOCK_MSG COMMAND_CLASS_SCHEDULE_ENTRY_LOCK = 85;
    COMMAND_CLASS_SCREEN_ATTRIBUTES_MSG COMMAND_CLASS_SCREEN_ATTRIBUTES = 86;
    COMMAND_CLASS_SCREEN_MD_MSG COMMAND_CLASS_SCREEN_MD = 87;
    COMMAND_CLASS_SECURITY_MSG COMMAND_CLASS_SECURITY = 88;
    COMMAND_CLASS_SECURITY_2_MSG COMMAND_CLASS_SECURITY_2 = 89;
    COMMAND_CLASS_SECURITY_PANEL_MODE_MSG COMMAND_CLASS_SECURITY_PANEL_MODE = 90;
    COMMAND_CLASS_SECURITY_PANEL_ZONE_MSG COMMAND_CLASS_SECURITY_PANEL_ZONE = 91;
    COMMAND_CLASS_SECURITY_PANEL_ZONE_SENSOR_MSG COMMAND_CLASS_SECURITY_PANEL_ZONE_SENSOR = 92;
    COMMAND_CLASS_SENSOR_ALARM_MSG COMMAND_CLASS_SENSOR_ALARM = 93;
    COMMAND_CLASS_SENSOR_BINARY_MSG COMMAND_CLASS_SENSOR_BINARY = 94;
    COMMAND_CLASS_SENSOR_CONFIGURATION_MSG COMMAND_CLASS_SENSOR_CONFIGURATION = 95;
    COMMAND_CLASS_SENSOR_MULTILEVEL_MSG COMMAND_CLASS_SENSOR_MULTILEVEL = 96;
    COMMAND_CLASS_SILENCE_ALARM_MSG COMMAND_CLASS_SILENCE_ALARM = 97;
    COMMAND_CLASS_SIMPLE_AV_CONTROL_MSG COMMAND_CLASS_SIMPLE_AV_CONTROL = 98;
    COMMAND_CLASS_SUPERVISION_MSG COMMAND_CLASS_SUPERVISION = 99;
    COMMAND_CLASS_SWITCH_ALL_MSG COMMAND_CLASS_SWITCH_ALL = 100;
    COMMAND_CLASS_SWITCH_BINARY_MSG COMMAND_CLASS_SWITCH_BINARY = 101;
    COMMAND_CLASS_SWITCH_COLOR_MSG COMMAND_CLASS_SWITCH_COLOR = 102;
    COMMAND_CLASS_SWITCH_MULTILEVEL_MSG COMMAND_CLASS_SWITCH_MULTILEVEL = 103;
    COMMAND_CLASS_SWITCH_TOGGLE_BINARY_MSG COMMAND_CLASS_SWITCH_TOGGLE_BINARY = 104;
    COMMAND_CLASS_SWITCH_TOGGLE_MULTILEVEL_MSG COMMAND_CLASS_SWITCH_TOGGLE_MULTILEVEL = 105;
    COMMAND_CLASS_TARIFF_CONFIG_MSG COMMAND_CLASS_TARIFF_CONFIG = 106;
    COMMAND_CLASS_TARIFF_TBL_MONITOR_MSG COMMAND_CLASS_TARIFF_TBL_MONITOR = 107;
    COMMAND_CLASS_THERMOSTAT_FAN_MODE_MSG COMMAND_CLASS_THERMOSTAT_FAN_MODE = 108;
    COMMAND_CLASS_THERMOSTAT_FAN_STATE_MSG COMMAND_CLASS_THERMOSTAT_FAN_STATE = 109;
    COMMAND_CLASS_THERMOSTAT_HEATING_MSG COMMAND_CLASS_THERMOSTAT_HEATING = 110;
    COMMAND_CLASS_THERMOSTAT_MODE_MSG COMMAND_CLASS_THERMOSTAT_MODE = 111;
    COMMAND_CLASS_THERMOSTAT_OPERATING_STATE_MSG COMMAND_CLASS_THERMOSTAT_OPERATING_STATE = 112;
    COMMAND_CLASS_THERMOSTAT_SETBACK_MSG COMMAND_CLASS_THERMOSTAT_SETBACK = 113;
    COMMAND_CLASS_THERMOSTAT_SETPOINT_MSG COMMAND_CLASS_THERMOSTAT_SETPOINT = 114;
    COMMAND_CLASS_TIME_MSG COMMAND_CLASS_TIME = 115;
    COMMAND_CLASS_TIME_PARAMETERS_MSG COMMAND_CLASS_TIME_PARAMETERS = 116;
    COMMAND_CLASS_TRANSPORT_SERVICE_MSG COMMAND_CLASS_TRANSPORT_SERVICE = 117;
    COMMAND_CLASS_USER_CODE_MSG COMMAND_CLASS_USER_CODE = 118;
    COMMAND_CLASS_VERSION_MSG COMMAND_CLASS_VERSION = 119;
    COMMAND_CLASS_WAKE_UP_MSG COMMAND_CLASS_WAKE_UP = 120;
    COMMAND_CLASS_WINDOW_COVERING_MSG COMMAND_CLASS_WINDOW_COVERING = 121;
    COMMAND_CLASS_ZENSOR_NET_MSG COMMAND_CLASS_ZENSOR_NET = 122;
    COMMAND_CLASS_ZIP_MSG COMMAND_CLASS_ZIP = 123;
    COMMAND_CLASS_ZIP_6LOWPAN_MSG COMMAND_CLASS_ZIP_6LOWPAN = 124;
    COMMAND_CLASS_ZIP_GATEWAY_MSG COMMAND_CLASS_ZIP_GATEWAY = 125;
    COMMAND_CLASS_ZIP_NAMING_MSG COMMAND_CLASS_ZIP_NAMING = 126;
    COMMAND_CLASS_ZIP_ND_MSG COMMAND_CLASS_ZIP_ND = 127;
    COMMAND_CLASS_ZIP_PORTAL_MSG COMMAND_CLASS_ZIP_PORTAL = 128;
    COMMAND_CLASS_ZWAVEPLUS_INFO_MSG COMMAND_CLASS_ZWAVEPLUS_INFO = 129;
    ZWAVE_CMD_CLASS_MSG ZWAVE_CMD_CLASS = 130;
   }
   string params = 131;
}
